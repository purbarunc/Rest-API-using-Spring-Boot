plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.0"
}

group = 'com.codex'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.modelmapper:modelmapper:2.3.9'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
	compileOnly 'org.projectlombok:lombok'
	implementation 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	doFirst {
		// this setting will force unit test execution to use application.properties
		systemProperty 'spring.profiles.active', 'default' 
		println '> Using spring.profiles.active: ' +systemProperties['spring.profiles.active']
	}
	useJUnitPlatform()
}



bootRun {
    main = 'com.codex.StudentServiceApplication'
    systemProperties System.properties
}

sonarqube {
  properties {
    property "sonar.projectKey", "purbarunc_user-service"
    property "sonar.organization", "purbarunc"
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.binaries", "build/classes"
    property "sonar.dynamicAnalysis", "reuseReports"
	property "sonar.java.coveragePlugin", "jacoco"
	property "sonar.coverage.jacoco.xmlReportPaths", "/build/reports/jacoco/report.xml"
  }
}
